//==============================================================
//
//ポリゴン処理[polygon.cpp]
//Author:佐久間優香
//
//==============================================================
#include"polygon.h"
#include"manager.h"
#include"texture.h"
#include"field.h"

//マクロ定義
#define WIDTH (500.0f) //横幅
#define HEIGHT (0.0f) //高さ
#define VERTICL (500.0f)	//縦幅
//vertical

//==============================================================
//コンストラクタ
//==============================================================
CField::CField()
{
	m_pos = D3DXVECTOR3(0.0f, 0.0f, 0.0f);
	m_move = D3DXVECTOR3(0.0f, 0.0f, 0.0f);		//移動量
	m_rot = D3DXVECTOR3(0.0f, 0.0f, 0.0f);		//向き
}

//==============================================================
//コンストラクタ(オーバーロード)
//==============================================================
CField::CField(TYPE type,D3DXVECTOR3 pos)
{
	m_pos = pos;
	m_move = D3DXVECTOR3(0.0f, 0.0f, 0.0f);		//移動量
	m_rot = D3DXVECTOR3(0.0f, 0.0f, 0.0f);		//向き

	//種類の設定
	SetType(type);
}

//==============================================================
//デストラクタ
//==============================================================
CField::~CField()
{

}

//==============================================================
//敵のの生成処理
//==============================================================
CField *CField::Create(TYPE type, D3DXVECTOR3 pos)
{
	CField *pField = NULL;

	if (pField == NULL)
	{
		//オブジェクト2Dの生成
		pField = new CField(type,pos);

		//初期化処理
		pField->Init();
	}

	return pField;
}

//==============================================================
//敵の初期化処理
//==============================================================
HRESULT CField::Init(void)
{
	CObject3D *p = CObject3D::Create();
	p->BindTexture(CManager::Get()->GetTexturet()->Regist("data\\TEXTURE\\meadow.jpg"));
	p->SetPosition(m_pos);
	p->SetSize(WIDTH, HEIGHT, VERTICL);

	return S_OK;
}

//==============================================================
//敵の終了処理
//==============================================================
void CField::Uninit(void)
{
	////オブジェクト2Dの終了処理
	CObject3D::Uninit();
}

//==============================================================
//敵の更新処理
//==============================================================
void CField::Update(void)
{
	/*CObject3D::Update();*/
}

//==============================================================
//敵の描画処理
//==============================================================
void CField::Draw(void)
{
	////オブジェクト2Dの描画処理
	//CObject3D::Draw();
}